type: com.google.api.codegen.ConfigProto
config_schema_version: 1.0.0
# The settings of generated code in a specific language.
language_settings:
  java:
    package_name: com.google.cloud.speech.v1p1beta1
  python:
    package_name: google.cloud.speech_v1p1beta1.gapic
  go:
    package_name: cloud.google.com/go/speech/apiv1p1beta1
  csharp:
    package_name: Google.Cloud.Speech.V1P1Beta1
  ruby:
    package_name: Google::Cloud::Speech::V1p1beta1
  php:
    package_name: Google\Cloud\Speech\V1p1beta1
  nodejs:
    package_name: speech.v1p1beta1
# The configuration for the license header to put on generated files.
license_header:
  # The file containing the copyright line(s).
  copyright_file: copyright-google.txt
  # The file containing the raw license header without any copyright line(s).
  license_file: license-header-apache-2.0.txt
# A list of API interface configurations.
interfaces:
  # The fully qualified name of the API interface.
- name: google.cloud.speech.v1p1beta1.Speech
  smoke_test:
    method: Recognize
    init_fields:
    - config.language_code="en-US"
    - config.sample_rate_hertz=44100
    - config.encoding=FLAC
    - audio.uri="gs://gapic-toolkit/hello.flac"
  # A list of resource collection configurations.
  # Consists of a name_pattern and an entity_name.
  # The name_pattern is a pattern to describe the names of the resources of this
  # collection, using the platform's conventions for URI patterns. A generator
  # may use this to generate methods to compose and decompose such names. The
  # pattern should use named placeholders as in `shelves/{shelf}/books/{book}`;
  # those will be taken as hints for the parameter names of the generated
  # methods. If empty, no name methods are generated.
  # The entity_name is the name to be used as a basis for generated methods and
  # classes.
  collections: []
  # Definition for retryable codes.
  retry_codes_def:
  - name: idempotent
    retry_codes:
    - DEADLINE_EXCEEDED
    - UNAVAILABLE
  - name: non_idempotent
    retry_codes: []
  # Definition for retry/backoff parameters.
  retry_params_def:
  - name: default
    initial_retry_delay_millis: 100
    retry_delay_multiplier: 1.3
    max_retry_delay_millis: 60000
    initial_rpc_timeout_millis: 1000000
    rpc_timeout_multiplier: 1
    max_rpc_timeout_millis: 1000000
    total_timeout_millis: 5000000
  # A list of method configurations.
  # Common properties:
  #
  #   name - The simple name of the method.
  #
  #   flattening - Specifies the configuration for parameter flattening.
  #   Describes the parameter groups for which a generator should produce method
  #   overloads which allow a client to directly pass request message fields as
  #   method parameters. This information may or may not be used, depending on
  #   the target language.
  #   Consists of groups, which each represent a list of parameters to be
  #   flattened. Each parameter listed must be a field of the request message.
  #
  #   required_fields - Fields that are always required for a request to be
  #   valid.
  #
  #   resource_name_treatment - An enum that specifies how to treat the resource
  #   name formats defined in the field_name_patterns and
  #   response_field_name_patterns fields.
  #   UNSET: default value
  #   NONE: the collection configs will not be used by the generated code.
  #   VALIDATE: string fields will be validated by the client against the
  #   specified resource name formats.
  #   STATIC_TYPES: the client will use generated types for resource names.
  #
  #   page_streaming - Specifies the configuration for paging.
  #   Describes information for generating a method which transforms a paging
  #   list RPC into a stream of resources.
  #   Consists of a request and a response.
  #   The request specifies request information of the list method. It defines
  #   which fields match the paging pattern in the request. The request consists
  #   of a page_size_field and a token_field. The page_size_field is the name of
  #   the optional field specifying the maximum number of elements to be
  #   returned in the response. The token_field is the name of the field in the
  #   request containing the page token.
  #   The response specifies response information of the list method. It defines
  #   which fields match the paging pattern in the response. The response
  #   consists of a token_field and a resources_field. The token_field is the
  #   name of the field in the response containing the next page token. The
  #   resources_field is the name of the field in the response containing the
  #   list of resources belonging to the page.
  #
  #   retry_codes_name - Specifies the configuration for retryable codes. The
  #   name must be defined in interfaces.retry_codes_def.
  #
  #   retry_params_name - Specifies the configuration for retry/backoff
  #   parameters. The name must be defined in interfaces.retry_params_def.
  #
  #   field_name_patterns - Maps the field name of the request type to
  #   entity_name of interfaces.collections.
  #   Specifies the string pattern that the field must follow.
  #
  #   timeout_millis - Specifies the default timeout for a non-retrying call. If
  #   the call is retrying, refer to retry_params_name instead.
  methods:
  - name: Recognize
    samples:
      standalone:
      - calling_forms: ".*"
        value_sets: [speech_transcribe_word_level_confidence_beta]
        region_tag: speech_transcribe_word_level_confidence_beta
      - calling_forms: ".*"
        value_sets: [speech_transcribe_diarization_beta]
        region_tag: speech_transcribe_diarization_beta
      - calling_forms: ".*"
        value_sets: [speech_transcribe_multilanguage_beta]
        region_tag: speech_transcribe_multilanguage_beta
      - calling_forms: ".*"
        value_sets: [speech_transcribe_multichannel_beta]
        region_tag: speech_transcribe_multichannel_beta

    sample_value_sets:

    - id: speech_transcribe_word_level_confidence_beta
      description: Enabling word-level confidence
      parameters:
        defaults:
        - audio.content="Path to local audio file, e.g. /path/audio.raw"
        - config.sample_rate_hertz=16000
        - config.language_code="en-US"
        - config.encoding=LINEAR16
        - config.enable_word_confidence=True
        attributes:
        - parameter: config.language_code
          sample_argument_name: language_code
        - parameter: audio.content
          sample_argument_name: local_file_path
          read_file: true
      on_success:
      - loop:
          variable: result
          collection: $resp.results
          body:
          - define: alternative=result.alternatives[0]
          - print:
            - "Transcript: %s"
            - alternative.transcript
          - print:
            - "Confidence: %s"
            - alternative.confidence
          - loop:
              collection: alternative.words
              variable: word
              body:
              - print:
                - "Word: %s"
                - word.word
              - print:
                - "Word confidence: %s"
                - word.confidence

    - id: speech_transcribe_diarization_beta
      description: Separate different speakers in an audio recording
      parameters:
        defaults:
        - audio.content="Path to local audio file, e.g. /path/audio.wav"
        - config.language_code="en-US"
        - config.enable_speaker_diarization=True
        - config.diarization_speaker_count=2
        attributes:
        - parameter: config.language_code
          sample_argument_name: language_code
        - parameter: audio.content
          sample_argument_name: local_file_path
          read_file: true
      on_success:
      - loop:
          variable: result
          collection: $resp.results
          body:
          - comment:
              - |
                  First recognition hypothesis.
                  These alternatives are ordered in terms of accuracy, with the top (first) alternative being the most probable.
          - comment:
              - "%s is the most probable recognition result."
              - first_alternative
          - define: first_alternative=result.alternatives[0]
          - print:
            - "Most probable transcript: %s"
            - first_alternative.transcript
          - print:
            - "Recognized words and assigned speaker tag:" 
          - loop:
              collection: first_alternative.words
              variable: word
              body:
              - print:
                - "Word: %s"
                - word.word
              - comment:
                - "Speaker tag is a distinct integer assigned to every speaker in the audio."
              - print:
                - "Speaker tag: %s"
                - word.speaker_tag

    - id: speech_transcribe_multilanguage_beta
      description: |
        Detecting language spoken automatically

        Supports a list of up to 3 additional BCP-47 language tags of possible
        alternative languages of the supplied audio.
      parameters:
        defaults:
        - audio.content="Path to local audio file, e.g. /path/audio.wav"
        - config.language_code="fr-FR"
        - config.alternative_language_codes[0]="de-DE"
        - config.alternative_language_codes[1]="it-IT"
        - config.alternative_language_codes[2]="en-US"
        attributes:
        - parameter: audio.content
          sample_argument_name: local_file_path
          read_file: true
        - parameter: config.language_code
          sample_argument_name: language_code
        - parameter: config.alternative_language_codes[0]
          sample_argument_name: alt_language_one
        - parameter: config.alternative_language_codes[1]
          sample_argument_name: alt_language_two
        - parameter: config.alternative_language_codes[2]
          sample_argument_name: alt_language_three
      on_success:
      - loop:
          variable: result
          collection: $resp.results
          body:
          - print:
            - "Result detected language: %s"
            - result.language_code
          - print:
            - "Highest accuracy result transcript: %s"
            - result.alternatives[0].transcript

    - id: speech_transcribe_multichannel_beta
      description: |
        Transcribe audio with multiple channels
      parameters:
        defaults:
        - audio.content="Path to local audio file, e.g. /path/audio.wav"
        - config.language_code="en-US"
        - config.enable_separate_recognition_per_channel=True
        - config.audio_channel_count=2
        attributes:
        - parameter: audio.content
          sample_argument_name: local_file_path
          read_file: true
        - parameter: config.language_code
          sample_argument_name: language_cod
          # Can numerical values be passed in via CLI?
          # TODO(rebeccataylor) confirm.
        - parameter: config.audio_channel_count
          sample_argument_name: channel_count
      on_success:
      - loop:
          variable: result
          collection: $resp.results
          body:
          - comment:
            - |
                For multi-channel audio, this is the channel number corresponding
                to the recognized result for the audio from that channel.
          - print:
            - "Channel tag: %s"
            - result.channel_tag
          - print:
            - "Transcript: %s"
            - result.alternatives[0].transcript

    flattening:
      groups:
      - parameters:
        - config
        - audio
    required_fields:
    - config
    - audio
    sample_code_init_fields:
    - config.encoding=FLAC
    - config.sample_rate_hertz=44100
    - config.language_code="en-US"
    - audio.uri=gs://bucket_name/file_name.flac
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 1000000
  - name: LongRunningRecognize
    flattening:
      groups:
      - parameters:
        - config
        - audio
    required_fields:
    - config
    - audio
    sample_code_init_fields:
    - config.encoding=FLAC
    - config.sample_rate_hertz=44100
    - config.language_code="en-US"
    - audio.uri=gs://bucket_name/file_name.flac
    retry_codes_name: non_idempotent
    retry_params_name: default
    timeout_millis: 60000
    long_running:
      return_type: google.cloud.speech.v1p1beta1.LongRunningRecognizeResponse
      metadata_type: google.cloud.speech.v1p1beta1.LongRunningRecognizeMetadata
      initial_poll_delay_millis: 20000
      poll_delay_multiplier: 1.5
      max_poll_delay_millis: 45000
      total_poll_timeout_millis: 86400000
  - name: StreamingRecognize
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 1000000

