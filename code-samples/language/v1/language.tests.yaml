# Commented out assertions for PHP
# PHP does not yet support printing out the display name of enum values
# This is a general protobuf issue: https://github.com/protocolbuffers/protobuf/pull/5342
# Assertions commented out here should work in all languages except PHP
# Will uncomment once PHP offers enum support (pending protobuf 3.7 release)

# What should be tested?
#
# Should we test that samples run with default values (without passing arguments)?
# Should we test that samples run with explicitly passed arguments?
#
# Ideally – both.
#
# Which is the priority? – default values.
#
# It's more important that the samples run AS-IS, as they can be viewed on the website.
#
# Making sure that they run with CLI arguments passed in is *good* but significantly less of a priority.

test:
  suites:
  - name: Natural Language V1
    cases:

    - name: Analyze Syntax
      spec:
      - call:
          target: language_syntax_text
      - assert_contains:
      # - literal: "Part of speech: DET"
        - literal: "Text: This"
      # - literal: "Part of speech: VERB"
        - literal: "Text: is"
      # - literal: "Part of speech: ADJ"
        - literal: "Text: short"
      # - literal: "Part of speech: NOUN"
        - literal: "Text: sentence"
      # - literal: "Part of speech: PUNCT"
        - literal: "Text: ."

    - name: Analyze Syntax – GCS
      spec:
      - call:
          target: language_syntax_gcs
      - assert_contains:
      # - literal: "Part of speech: DET"
        - literal: "Text: This"
      # - literal: "Part of speech: VERB"
        - literal: "Text: is"
      # - literal: "Part of speech: ADJ"
        - literal: "Text: short"
      # - literal: "Part of speech: NOUN"
        - literal: "Text: sentence"
      # - literal: "Part of speech: PUNCT"
        - literal: "Text: ."

    - name: Analyze Sentiment
      spec:
      - call:
          target: language_sentiment_text
      - assert_contains:
        - literal: "Sentiment score: 0."
        - literal: "Magnitude: 0."

    - name: Analyze Sentiment – Negative
      spec:
      - call:
          target: language_sentiment_text
          params:
            text_content:
              literal: "I am so sad and upset."
      - assert_contains:
        - literal: "Sentiment score: -0."
        - literal: "Magnitude: 0."

    - name: Analyze Sentiment – GCS
      spec:
      - call:
          target: language_sentiment_gcs
      - assert_contains:
        - literal: "Sentiment score: 0."
        - literal: "Magnitude: 0."

    - name: Analyze Sentiment – GCS – Negative
      spec:
      - call:
          target: language_sentiment_gcs
          params:
            gcs_uri:
              literal: "gs://cloud-samples-data/language/sentiment-negative.txt"
      - assert_contains:
        - literal: "Sentiment score: -0."
        - literal: "Magnitude: 0."
       
    - name: Analyze Entities
      spec:
      - call:
          target: language_entities_text
      - assert_contains:
        - literal: "Entity name: California"
        #- literal: "Entity type: LOCATION"
        - literal: "Entity salience score: 1"
        - literal: "Mention: California"
        #- literal: "Mention type: PROPER"
        - literal: "Mention: state"

    - name: Analyze Entities – GCS
      spec:
      - call:
          target: language_entities_gcs
      - assert_contains:
        - literal: "Entity name: California"
        #- literal: "Entity type: LOCATION"
        - literal: "Entity salience score: 1"
        - literal: "Mention: California"
        #- literal: "Mention type: PROPER"
        - literal: "Mention: state"

    - name: Analyze Entity Sentiment
      spec:
      - call:
          target: language_entity_sentiment_text
      - assert_contains:
        - literal: "Entity name: Grapes"
        - literal: "Entity sentiment score: 0."
        - literal: "Mention: Grapes"
        #- literal: "Mention type: COMMON"
        - literal: "Mention sentiment score: 0."
        - literal: "Mention sentiment magnitude: 0."
        - literal: "Entity name: Bananas"
        - literal: "Entity sentiment score: -0."
        - literal: "Mention: Bananas"
        - literal: "Mention sentiment score: -0."

    - name: Analyze Entity Sentiment – GCS
      spec:
      - call:
          target: language_entity_sentiment_gcs
      - assert_contains:
        - literal: "Entity name: Grapes"
        - literal: "Entity sentiment score: 0."
        - literal: "Mention: Grapes"
        #- literal: "Mention type: COMMON"
        - literal: "Mention sentiment score: 0."
        - literal: "Mention sentiment magnitude: 0."
        - literal: "Entity name: Bananas"
        - literal: "Entity sentiment score: -0."
        - literal: "Mention: Bananas"
        - literal: "Mention sentiment score: -0."

    - name: Classify Text
      spec:
      - call:
          target: language_classify_text
      - assert_contains:
        - literal: "Category name: /Arts & Entertainment"
        - literal: "Confidence: 0."

    - name: Classify Text – GCS
      spec:
      - call:
          target: language_classify_gcs
      - assert_contains:
        - literal: "Category name: /Arts & Entertainment"
        - literal: "Confidence: 0."