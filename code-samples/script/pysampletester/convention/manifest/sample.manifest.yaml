version: 1  # determines how to parse the rest of the file
sets:       # a list of groupings
# Each grouping can list any number of grouping-wide labels name/value
# pairs. These name/value pairs are applied to every item; if the item
# already has a label with that name, the value specified here is
# prepended to the value specified in the item. The idea is that you
# can specify repeated parts of a path up here, and only the parts
# that vary in each item
- language: python
  path: "/home/nobody/api/samples/"
  bin: python3  # used to run these items
  __items__:
  - path: "trivial/method/sample_alice"
    region_tag: "alice"
    canonical: "trivial"
  - path: "complex/method/usecase_bob"
    region_tag: "robert"
    tag: "guide"
- path: "/tmp/"
  __items__:
  - path: "newer/carol"
    region_tag: "math"
  - path: "newest/dan"
    region_tag: "math"
# The above two groupings together are equivalent to the following
# flattened grouping, which does not use any top-level labels. Note
# that in a real application you would not specify an artifact twice
# like we do here for illustrative purposes.
- __items__:
  - path: "/home/nobody/api/samples/trivial/method/sample_alice"
    language: python
    bin: python3  # used to run this item
    region_tag: "alice"
    canonical: "trivial"
  - path: "/home/nobody/api/samples/complex/method/usecase_bob"
    language: python
    bin: python3  # used to run this item
    region_tag: "robert"
    tag: "guide"
  - path: "/tmp/newer/carol"
    region_tag: "math"
  - path: "/tmp/newest/dan"
    region_tag: "math"
